version: '3.3'

services:
  node: 
    image: node:20
    volumes:
      - ./:/app
    container_name: ${POJECT}_node
    command: tail -f /dev/null
    hostname: ${PROJECT_PREFIX}-node
    working_dir: /app/code
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_HOST=postgres
    ports:
      - ${APP_PORT}:3000

  postgres:
    image: postgres:13
    container_name: ${POJECT}_postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB_TEST=${DB_NAME}_test
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/environments/dev/postgre/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh


  pgadmin:
    image: dpage/pgadmin4
    container_name: ${POJECT}_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_USER}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  mailhog:
    image: mailhog/mailhog
    container_name: ${POJECT}_mailhog
    ports:
      - "${MAILHOG_SMTP_PORT}:1025"
      - "${MAILHOG_HTTP_PORT}:8025"

volumes:
  postgres_data:
  pgadmin_data: